# This is a basic workflow to help you get started with Actions

name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest ]
        #os: [ macos-latest, ubuntu-latest ]
        include:
          - os: macos-latest
            env:
              - PKG: src-tauri/target/release/bundle/dmg/calculator_*_x64.dmg
#          - os: ubuntu-latest
#            env:
#              - PKG: src-tauri/target/release/bundle/dmg/calculator_*_x64.dmg
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt #, clippy
      - name: Rust lint
        run: cargo fmt --manifest-path src-tauri/Cargo.toml -- --check
#      - name: Rust Clippy
#        run: cargo clippy --manifest-path src-tauri/Cargo.toml
      - name: Rust build
        run: cargo build --manifest-path src-tauri/Cargo.toml
      - name: Rust test
        run: cargo test --manifest-path src-tauri/Cargo.toml
      - name: NPM Install dependencies
        run: npm install
      - name: NPM Lint
        run: npm run lint
      - name: NPM Build
        run: npm run build
      - name: Install bundler
        uses: actions-rs/install@v0.1
        with:
          crate: tauri-bundler
      - name: Bundle
        run: npm run tauri:build
      - name: Zip
        run: zip -9 my-artifact.zip ${PKG}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: v${{ github.run_number }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-artifact.zip
          asset_name: ${{ matrix.os }}.zip
          asset_content_type: application/zip
