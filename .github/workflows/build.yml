# This is a basic workflow to help you get started with Actions

name: Build

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: v${{ github.run_number }}
          draft: true
          prerelease: true
  build:
    name: Build release
    needs: create_release
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ macos, ubuntu, windows ]
        include:
          - os: macos
            PKG: src-tauri/target/release/bundle/dmg/calculator_*64.dmg
          - os: ubuntu
            PKG: src-tauri/target/release/bundle/deb/calculator_*_amd64.deb
          - os: windows
            PKG: src-tauri/target/release/bundle/msi/calculator_*64.msi
    steps:
      - uses: actions/checkout@v2
      - name: Install ubuntu packages
        if: matrix.os == 'ubuntu'
        run: |
          sudo apt update && sudo apt install libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            appmenu-gtk3-module \
            libgtk-3-dev \
            squashfs-tools
      - name: Install MacOS packages
        if: matrix.os == 'macos'
        run: brew install tree
      - name: Install Windows packages
        if: matrix.os == 'windows'
        shell: bash
        run: choco install tree zip
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt #, clippy
      - name: Rust lint
        run: cargo fmt --manifest-path src-tauri/Cargo.toml -- --check
#      - name: Rust Clippy
#        run: cargo clippy --manifest-path src-tauri/Cargo.toml
      - name: Rust build
        run: cargo build --manifest-path src-tauri/Cargo.toml --release
      - name: Rust test
        run: cargo test --manifest-path src-tauri/Cargo.toml --release
      - name: NPM Install dependencies
        run: npm install
      - name: NPM Lint
        run: npm run lint
      - name: NPM Build
        run: npm run build
      - name: Install bundler
        uses: actions-rs/install@v0.1
        with:
          crate: tauri-bundler
      - name: Bundle
        run: npm run tauri:build
      - name: Tree view bundle
        shell: bash
        run: tree ./src-tauri/target/release/bundle/
      - name: Zip package
        shell: bash
        run: zip -9 my-artifact.zip ${{matrix.PKG}}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./my-artifact.zip
          asset_name: ${{ matrix.os }}.zip
          asset_content_type: application/zip
